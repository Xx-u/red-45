@charset "UTF-8";
// 引入某个scss文件
@import "./color.scss";

//静默注释
// .father {
//这是一个局部变量,只对.father内部生效
//     $colorA: #ccc;
//     width: 500px;
//     height: 500px;
//     background-color: $colorA;
//     display: flex;
//     justify-content: center;
//     align-items: center;
//     margin-bottom: 10px;

//     .son {
//         width: 200px;
//         height: 200px;

//         font: {
//             size: 20px;
//             weight: 600;
//         }

//         background-color: aqua;

//         &:hover {
//             background-color: red;
//         }
//     }
// }

// .box {
//     width: 500px;
//     height: 500px;
//这里只能选到全局变量
//     background-color: $colorA;
// }

// 占位符
// %commoncss {
//     width: 300px;
//     height: 300px;
//     display: flex;
//     justify-content: center;
//     background-color: $colorA;
// }

// .box {
//     @extend %commoncss
// }

// 定义Mixin复用类  ()内的参数叫做形参
/*
    定义了形参   用来接收主轴对其方式
*/


/*

@mixin isFlex($rowAlign:center, $bgcColor:#ccc) {
    display: flex;
    justify-content: $rowAlign;
    align-items: center;
    background-color: $bgcColor;
}

//函数的基本用法
@function getSum($numA, $numB, $monad) {
    @return $numA+$numB+$monad;
}

//定义了一个没有参数的mixin复用块
@mixin textCss {
    font-size: 18px;
    font-weight: 600;
    color: $colorA;
}

.father {
    width: getSum(250, 250, px);
    // width: 500px;
    height: 500px;
    //调用mixin 这里传递进去的center和#ccc就是实参
    @include isFlex($bgcColor:pink);
    //调用没有参数的mixin复用块
    @include textCss;
}

.son {
    width: 100px;
    height: 100px;
    background-color: aqua;
    border: 2px solid black;
}

.box {
    width: 400px;
    height: 400px;
    @include isFlex(center, pink)
}

*/


.father {
    width: 500px;
    height: 500px;
    background-color: $colorC;
}